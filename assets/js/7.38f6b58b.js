(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{207:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("CageFS is a virtualized file system and a set of tools to contain each user in its own 'cage'. Each customer will have its own fully functional CageFS, with all the system files, tools, etc.")]),t._v(" "),s("p",[t._v("The benefits of CageFS are:")]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("At the same time, user's environment will be fully functional, and user should not feel in any way restricted. No adjustments to user's scripts are needed. CageFS will cage any scripts execution done via:")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("Minimum Requirements:")]),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("Depending on your setup, and number of users, you might also need:")]),t._v(" "),t._m(7),t._v(" "),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Warning")]),t._v(" "),s("p",[t._v("If at any time you decide to uninstall CageFS, please make sure you follow "),s("router-link",{attrs:{to:"/cagefs/#uninstalling-cagefs"}},[t._v("uninstall instructions")])],1)]),t._v(" "),s("p",[t._v("To install CageFS:\n")]),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("CageFS will automatically detect and configure all necessary files for:")]),t._v(" "),t._m(12),t._v(" "),s("p",[t._v("Web interface to manage CageFS is available for cPanel, Plesk 10+, DirectAdmin, ISPmanager & Interworx. Command line tool would need to be used for other control panels.")]),t._v(" "),s("p",[t._v("Once you initialized the template you can start enabling users. By default CageFS is disabled for all users.")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("You can find more information on "),t._m(15),t._v(" automatic migration in "),s("router-link",{attrs:{to:"/kernel_settings/#kernel-config-variables"}},[t._v("Kernel Config Variables")]),t._v(" .")],1),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("To uninstall CageFS, start by disabling and removing all directories:")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("Remove CageFS RPM:")]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("CageFS provides for two modes of operations:")]),t._v(" "),t._m(21),t._v(" "),s("p",[t._v("Mode #1 is convenient for production operation, where you want all new users to automatically be added to CageFS.\nMode #2 is convenient while you test CageFS, as it allows you to enable it on one by one for your customers.")]),t._v(" "),s("p",[t._v("To start using CageFS you have to select one of the mode of operations:\n")]),t._m(22),t._v("\nor\n"),t._m(23),t._v("\nor\n"),t._m(24),t._v("\nThat will switch the operation mode, preserving current disabled/enabled users.\n"),s("p",[t._v("To enable individual user do:\n")]),t._m(25),t._v("\nTo disable individual user:\n"),t._m(26),t._v("\nTo  list all enabled users:\n"),t._m(27),t._v("\nTo list all disabled users:\n"),t._m(28),t._v("\nTo see current mode of operation:\n"),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),s("p",[t._v("Options:")]),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),s("p",[t._v("Options:")]),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),s("p",[t._v("Common options:")]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),s("p",[t._v("Sometimes you will need to execute a command as user inside CageFS.")]),t._v(" "),s("p",[t._v("If a user has shell enabled - you can simply use:\n")]),t._m(41),t._v("\nYet, if a user have they shell disabled, it wouldn't work. To solve this issue, we have added command:\n"),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),s("p",[t._v("To start, run the command:\n")]),t._m(49),t._v("\nAt the moment 7 types of check are implemented:\n"),s("ol",[s("li",[s("p",[s("em",[t._v("Check cagefs mount points exists")]),t._v(" - reads "),s("em",[t._v("cagefs.mp")]),t._v(" file and verifies if the directories specified in it really exist on the disk. To learn more, visit "),s("router-link",{attrs:{to:"/cagefs/#mount-points"}},[t._v("Mount points")]),t._v(" and "),s("router-link",{attrs:{to:"/cagefs/#split-by-username"}},[t._v("Split by username")])],1)]),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53)]),t._v(" "),t._m(54),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[s("p",[s("em",[t._v("Check cagefs proxy commands configs are parsable")]),t._v(" - tries to load "),t._m(55),t._v(" files and parse them to check the syntax. In case of any parsing error the test will fail. To learn more, visit "),s("router-link",{attrs:{to:"/cagefs/#executing-by-proxy"}},[t._v("Executing by proxy")]),t._v(" .")],1)]),t._v(" "),s("li",[s("p",[s("em",[t._v("Check cagefs virt.mp files syntax")]),t._v(" - reads all "),s("em",[t._v("/var/cagefs///virt.mp")]),t._v(" files (if any) and checks their syntax validity. At the moment there are only two checks of the syntax: the file is not empty if it exists, and the file is not starting with the sub directory definitions (with @). To learn more, visit "),s("router-link",{attrs:{to:"/cagefs/#per-user-virtual-mount-points"}},[t._v("Per-user virtual mount points")])],1)]),t._v(" "),s("li",[s("p",[s("em",[t._v("Check MultiPHP system default PHP version")]),t._v(" – checks that MultiPHP system default PHP version is "),s("strong",[t._v("NOT")]),t._v(" Alt-PHP. That means "),s("span",{staticClass:"notranslate"},[t._v(" PHP Selector ")]),t._v(" should work properly. If MultiPHP system default PHP version is Alt-PHP, "),s("span",{staticClass:"notranslate"},[t._v(" PHP Selector ")]),t._v(" does not work and should be disabled. To learn more on how to disable "),s("span",{staticClass:"notranslate"},[t._v(" PHP Selector, ")]),t._v(" visit "),s("router-link",{attrs:{to:"/lve_manager/#cpanel-lve-manager"}},[t._v("cPanel LVE Manager")])],1)])]),t._v(" "),s("p",[t._v("Possible results of the checks:")]),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),s("p",[t._v("Due to the nature of CageFS, some options will not work as before or will require some changes:")]),t._v(" "),s("ul",[t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),s("li",[t._v("CageFS installation changes "),t._m(62),t._v(" to regular bash on cPanel - "),s("a",{attrs:{href:"http://kb.cloudlinux.com/2015/11/why-cagefs-installation-change-jailshell-to-regular-bash-on-cpanel/",target:"_blank",rel:"noopener noreferrer"}},[t._v("read why"),s("OutboundLink")],1),t._v(" .")])]),t._v(" "),t._m(63),t._v(" "),s("ul",[s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#file-system-templates"}},[t._v("File System Templates")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#excluding-files"}},[t._v("Excluding Files")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#excluding-users"}},[t._v("Excluding Users")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#mount-points"}},[t._v("Mount Points")])],1),t._v(" "),s("ul",[s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#per-user-virtual-mount-points"}},[t._v("Per user virtual mount points")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#split-by-username"}},[t._v("Split by Username")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#mounting-users-home-directory-inside-cagefs"}},[t._v("Mounting user’s home directory inside CageFS")])],1)])])]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#base-home-directory"}},[t._v("Base Home Directory")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#postgresql-support"}},[t._v("PostgreSQL support")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#pam-configuration"}},[t._v("PAM Configuration")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#executing-by-proxy"}},[t._v("Executing By Proxy")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#custom-etc-files-per-customer"}},[t._v("Custom /etc files per customer")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#moving-cagefs-skeleton-directory"}},[t._v("Moving "),s("span",{staticClass:"notranslate"},[t._v(" cagefs-skeleton ")]),t._v(" directory")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#moving-var-cagefs-directory"}},[t._v("Moving /var/cagefs directory")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#tmp-directories"}},[t._v("TMP directories")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#syslog"}},[t._v("Syslog")])],1)]),t._v(" "),s("li",[s("p",[s("router-link",{attrs:{to:"/cagefs/#excluding-mount-points"}},[t._v("Excluding mount points")])],1)])]),t._v(" "),t._m(64),t._v(" "),t._m(65),t._m(66),t._v(" "),s("p",[t._v("To update the template, you should run:\n")]),t._m(67),t._v(" "),t._m(68),t._m(69),t._v(" "),s("p",[t._v("To delete files from CageFS template, remove corresponding .cfg file, and run:\n")]),t._m(70),t._v(" "),t._m(71),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),t._m(75),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),s("p",[t._v("CageFS creates individual namespace for each user, making it impossible for users to see each other's files and creating high level of isolation. The way namespace is organized:")]),t._v(" "),s("ol",[t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._v(" "),t._m(87),t._v(" "),t._m(88),t._v(" "),s("li",[t._v("Additional custom directories can be mounted for each user by defining them in /etc/cagefs/cagefs.mp")]),t._v(" "),s("li",[t._v("You can define custom directories per user using "),s("router-link",{attrs:{to:"/cagefs/#per-user-virtual-mount-points"}},[t._v("virt.mp")]),t._v(" files "),s("em",[t._v("[CageFS 5.1 and higher]")])],1)]),t._v(" "),s("p",[t._v("To define individual custom directories in /etc/cagefs/cagefs.mp following format is used:")]),t._v(" "),t._m(89),t._v(" "),s("p",[t._v("This is useful when you need to give each user its own copy of a particular system directory, like:")]),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),s("p",[t._v("To modify mount points, edit /etc/cagefs/cagefs.mp. Here is an example of cagefs.mp:\n")]),t._m(92),t._v(" "),s("p",[t._v("If you want to change mount points, make sure you re-initialize mount points for all customers:\n")]),t._m(93),t._v("\nThis command will kill all current processes and reset mount points.\n"),t._m(94),t._v(" "),t._m(95),t._v(" "),s("ul",[s("li",[s("em",[t._v("Please, see "),s("router-link",{attrs:{to:"/cagefs/#split-by-username"}},[t._v("Split by username")]),t._v(" feature, as it might be simpler to implement in some cases.")],1)])]),t._v(" "),s("p",[t._v("Starting with CageFS 5.1 you can specify additional directories to be mounted inside user's CageFS. This can be specified for each user.\nTo specify virtual mount points for a user, create a file:")]),t._v(" "),t._m(96),t._v(" "),s("p",[t._v("Inside that file, you can specify mount points in the following format:\n")]),t._m(97),t._v(" "),t._m(98),t._v(" "),s("p",[t._v("Note that CageFS will automatically create those files for Plesk 10 & higher.")]),t._v(" "),t._m(99),t._m(100),t._v(" "),t._m(101),t._m(102),t._v(" "),t._m(103),t._m(104),t._v(" "),t._m(105),t._v(" "),t._m(106),t._v(" "),s("p",[t._v("Sometimes you might need to make sure that directory containing all users would show up as containing just that user inside CageFS. For example, if you have directory structure like:\n")]),t._m(107),t._v(" "),s("p",[t._v("Then we can add the following line to /etc/cagefs/cagefs.mp file:\n")]),t._m(108),t._v(" "),s("p",[t._v("and execute:\n")]),t._m(109),t._v(" "),t._m(110),t._v(" "),t._m(111),t._v(" "),t._m(112),t._v(" "),t._m(113),t._v(" "),t._m(114),t._v(" "),s("p",[t._v("This new mounting mode is enabled by default. You can switch to old mounting mode by executing the following commands:\n")]),t._m(115),t._v(" "),t._m(116),t._v(" "),t._m(117),t._v(" "),t._m(118),t._v(" "),t._m(119),t._v(" "),t._m(120),t._v(" "),s("p",[t._v("With content like:\n")]),t._m(121),t._v(" "),t._m(122),t._v(" "),t._m(123),t._v(" "),t._m(124),t._v(" "),t._m(125),t._m(126),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),t._m(127),t._v(" "),t._m(128),t._v(" "),t._m(129),t._v(" "),t._m(130),t._v(" "),t._m(131),t._v(" "),t._m(132),t._v(" "),s("p",[t._v("CloudLinux 7:")]),t._v(" "),t._m(133),t._v(" "),s("p",[t._v("When PostgreSQL has been installed after CageFS install, please add line:\n")]),t._m(134),t._v(" "),t._m(135),t._m(136),t._v(" "),s("p",[t._v("The steps above are enough to configure CageFS to work with PostgreSQL.")]),t._v(" "),s("p",[t._v("CloudLinux 6:")]),t._v(" "),t._m(137),t._v(" "),t._m(138),t._v(" "),t._m(139),t._v(" "),s("p",[t._v("To enable PostgreSQL support in CageFS:")]),t._v(" "),t._m(140),t._v(" "),t._m(141),t._v(" "),t._m(142),t._v(" "),t._m(143),t._v(" "),t._m(144),t._v(" "),s("p",[t._v("And update line:\n")]),t._m(145),t._v(" "),s("p",[t._v("to:\n")]),t._m(146),t._v(" "),s("p",[t._v("to prevent symlink from being removed.")]),t._v(" "),t._m(147),t._v(" "),t._m(148),t._v(" "),t._m(149),t._v(" "),t._m(150),t._m(151),t._v(" "),t._m(152),t._v(" "),t._m(153),t._v(" "),t._m(154),t._v(" "),t._m(155),t._v(" "),s("p",[t._v("Once program is defined, run this command to populate the skeleton:\n")]),t._m(156),t._v(" "),t._m(157),t._v(" "),t._m(158),t._v(" "),t._m(159),t._v(" "),t._m(160),t._v(" "),t._m(161),t._v(" "),t._m(162),t._m(163),t._v(" "),t._m(164),t._m(165),t._v(" "),t._m(166),t._v(" "),s("p",[t._v("To turn this feature off:\n")]),t._m(167),t._v(" "),s("p",[t._v("Or to activate it back:\n")]),t._m(168),t._v(" "),t._m(169),t._v(" "),t._m(170),t._v(" "),t._m(171),t._v(" "),s("p",[t._v("Put all custom files, and sub-directories into that direcotry.")]),t._v(" "),t._m(172),t._v(" "),t._m(173),t._v(" "),s("p",[t._v("After that execute:\n")]),t._m(174),t._v(" "),s("p",[t._v("If you are making changes for multiple users, you can run:")]),t._v(" "),t._m(175),t._v(" "),t._m(176),t._m(177),t._v(" "),t._m(178),t._v(" "),t._m(179),t._v(" "),s("p",[t._v("There are two ways:")]),t._v(" "),t._m(180),t._v(" "),t._m(181),t._v(" "),t._m(182),t._v(" "),t._m(183),t._v(" "),t._m(184),t._v(" "),t._m(185),t._v(" "),t._m(186),t._v(" "),t._m(187),t._v(" "),t._m(188),t._v(" "),t._m(189),t._v(" "),t._m(190),t._v(" "),t._m(191),t._v(" "),s("p",[t._v("Verify that the following command gives empty output:\n")]),t._m(192),t._v(" "),s("p",[t._v("Then you can safely remove /var/cagefs.bak:\n")]),t._m(193),t._v(" "),t._m(194),t._v(" "),t._m(195),t._v(" "),t._m(196),t._v(" "),t._m(197),t._v(" "),s("p",[t._v("This can be changed by running:\n")]),t._m(198),t._v(" "),s("p",[t._v("Where 720 is the number of hours that the file had to be inaccessible to be removed.")]),t._v(" "),t._m(199),t._v(" "),t._m(200),t._v(" "),s("p",[t._v("The following path will be cleaned as well:")]),t._v(" "),t._m(201),t._v(" "),t._m(202),t._v(" "),t._m(203),t._v(" "),t._m(204),t._v(" "),t._m(205),t._v(" "),t._m(206),t._v(" "),t._m(207),t._v(" "),t._m(208),t._v(" "),t._m(209),t._v(" "),t._m(210),t._v(" "),t._m(211),t._v(" "),t._m(212),t._v(" "),t._m(213),t._v(" "),t._m(214),t._v(" "),t._m(215),t._v(" "),t._m(216),t._v(" "),t._m(217),t._v(" "),t._m(218),t._v(" "),t._m(219),t._v(" "),t._m(220),t._v(" "),t._m(221),t._v(" "),t._m(222),t._v(" "),s("p",[t._v("Each time the script runs, it performs the cleanup of the paths:")]),t._v(" "),t._m(223),t._v(" "),s("p",[t._v("The following features are applied during the cleanup:")]),t._v(" "),t._m(224),t._v(" "),t._m(225),t._v(" "),t._m(226),t._v(" "),t._m(227),t._v(" "),t._m(228),t._v(" "),t._m(229),t._m(230),t._v(" "),t._m(231),t._v(" "),t._m(232),t._v(" "),t._m(233),t._v(" "),t._m(234),t._v(" "),t._m(235),t._v(" "),t._m(236),t._m(237),t._v(" "),t._m(238),t._m(239),t._v(" "),t._m(240),t._v(" "),t._m(241),t._v(" "),s("p",[t._v("CageFS comes with a plugin for various control panels.")]),t._v(" "),s("p",[t._v("The plugin allows to:")]),t._v(" "),s("ul",[t._m(242),t._v(" "),s("li",[s("p",[t._v("Select "),s("router-link",{attrs:{to:"/cagefs/#managing-users"}},[t._v("mode of operation")]),t._v(" ;")],1)]),t._v(" "),t._m(243),t._v(" "),t._m(244)]),t._v(" "),t._m(245),t._v(" "),t._m(246),t._v(" "),s("p",[t._v("It allows to initialize CageFS, select users CageFS will be enabled for, as well as update CageFS skeleton.")]),t._v(" "),t._m(247),t._v(" "),t._m(248),t._v(" "),t._m(249),t._v(" "),t._m(250),t._v(" "),t._m(251),t._v(" "),t._m(252),t._v(" "),s("p",[t._v("CageFS comes with a plugin for Plesk 10.x. It allows initializing and updating CageFS template, as well as managing users and mode of operation for CageFS.")]),t._v(" "),s("p",[t._v("In modules section choose CageFS:")]),t._v(" "),t._m(253),t._v(" "),t._m(254),t._v(" "),t._m(255),t._v(" "),t._m(256),t._v(" "),t._m(257),t._v(" "),t._m(258),t._v(" "),t._m(259),t._v(" "),t._m(260),t._v(" "),t._m(261)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"cagefs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cagefs","aria-hidden":"true"}},[this._v("#")]),this._v(" CageFS")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Only safe binaries are available to user")]),t._v(" "),s("li",[t._v("User will not see any other users, and would have no way to detect presence of other users & their user names on the server")]),t._v(" "),s("li",[t._v("User will not be able to see server configuration files, such as Apache config files.")]),t._v(" "),s("li",[t._v("User's will have limited view of "),s("em",[t._v("/proc")]),t._v(" file system, and will not be able to see other users' processes")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("span",{staticClass:"notranslate"},[t._v(" Apache (suexec, suPHP, mod_fcgid, mod_fastcgi) ")])]),t._v(" "),s("li",[s("span",{staticClass:"notranslate"},[t._v(" LiteSpeed Web Server ")])]),t._v(" "),s("li",[s("span",{staticClass:"notranslate"},[t._v(" Cron Jobs  ")])]),t._v(" "),s("li",[t._v("SSH")]),t._v(" "),s("li",[t._v("Any other "),s("span",{staticClass:"notranslate"},[t._v(" PAM ")]),t._v(" enabled service")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("mod_php is not supported, MPM ITK requires a custom patch")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("CageFS is not supported for H-Sphere.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("kernel: CL5 with lve0.8.54 or later, CL6 with lve1.2.17.1 or later, CL7.")]),this._v(" "),e("li",[this._v("7GB of disk space.")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Up to 8MB per customer in "),s("em",[t._v("/var")]),t._v(" directory (to store custom "),s("em",[t._v("/etc")]),t._v(" directory)")]),t._v(" "),s("li",[t._v("5GB to 20GB in "),s("em",[t._v("/usr/share")]),t._v(" directory (to store safe skeleton of a filesystem)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ yum install cagefs\n$ /usr/sbin/cagefsctl --init\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("That last command will create skeleton directory that might be around 7GB in size. If you don't have enough disk space in "),e("em",[this._v("/usr/share")]),this._v(", use following commands to have "),e("span",{staticClass:"notranslate"},[e("code",[this._v("cagefs-skeleton")])]),this._v(" being placed in a different location:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ mkdir /home/cagefs-skeleton\n$ ln -s /home/cagefs-skeleton /usr/share/cagefs-skeleton\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("If you are placing skeleton in "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home")])]),t._v(" directory on cPanel servers, you must configure the following option in cPanel WHM: "),s("span",{staticClass:"notranslate"},[s("strong",[t._v("WHM -> Server Configuration -> Basic cPanel/WHM Setup -> Basic Config -> Additional home directories")])]),s("br"),t._v("\nChange the value to blank (not default "),s("span",{staticClass:"notranslate"},[t._v(" Home ")]),t._v(" ). Without changing this option, cPanel will create new accounts in incorrect places.")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("cPanel")]),t._v(" "),s("li",[t._v("Plesk")]),t._v(" "),s("li",[t._v("DirectAdmin")]),t._v(" "),s("li",[t._v("ISPmanager")]),t._v(" "),s("li",[t._v("Interworx")]),t._v(" "),s("li",[t._v("MySQL")]),t._v(" "),s("li",[t._v("PostgreSQL")]),t._v(" "),s("li",[t._v("LiteSpeed")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Starting from "),s("strong",[t._v("cagefs-6.1-27")]),t._v(" "),s("span",{staticClass:"notranslate"},[s("em",[t._v("fs.proc_can_see_other_uid")])]),t._v(" will be migrated (one time) from "),s("em",[t._v("/etc/sysctl.conf")]),t._v(" into "),s("em",[t._v("/etc/sysctl.d/90-cloudlinux.conf")]),t._v(" . If this variable is not set in either file, it will default to 0.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("It is strongly advised against setting this variable in "),s("em",[t._v("90-cloudlinux.conf")]),t._v(" . Define it in "),s("em",[t._v("/etc/sysctl.conf")]),t._v(" or in some other config file with an index number greater than "),s("em",[t._v("90-cloudlinux.conf")]),t._v(" , e.g. "),s("em",[t._v("/etc/sysctl.d/95-custom.conf")]),t._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("span",{staticClass:"notranslate"},[e("em",[this._v("fs.proc_can_see_other_uid")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"unistalling-cagefs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unistalling-cagefs","aria-hidden":"true"}},[this._v("#")]),this._v(" Unistalling CageFS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --remove-all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("That command will: disable CageFS for all customers, unmount CageFS for all users, removes "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share/cagefs-skeleton")]),this._v(" & "),e("em",[this._v("/var/cagefs")])]),this._v(" directories. It will not remove "),e("em",[this._v("/etc/cagefs")]),this._v(" directory.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ yum remove cagefs\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"managing-users"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#managing-users","aria-hidden":"true"}},[this._v("#")]),this._v(" Managing Users")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("Enabled for all, except those that are disabled.")]),this._v(" "),e("li",[this._v("Disabled for all, except those that are enabled.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --enable-all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --disable-all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --toggle-mode\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --enable [username]\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --disable [username]\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --list-enabled\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --list-disabled\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --display-user-mode\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"command-line-tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command-line-tools","aria-hidden":"true"}},[this._v("#")]),this._v(" Command-line Tools")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("cagefsctl")]),this._v(" is used to manage CageFS. It allows initializing and updating CageFS, as well as enabling/disabling CageFS for individual users.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Use the following syntax to manage CageFS:\n"),e("span",{staticClass:"notranslate"},[e("code",[this._v("/usr/sbin/cagefsctl [OPTIONS]")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-i")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --init ")])]),t._v(" "),s("td",[t._v("initialize CageFS (create CageFS if it does not exist)")])]),t._v(" "),s("tr",[s("td",[t._v("-r")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --reinit ")])]),t._v(" "),s("td",[t._v("reinitialize CageFS (make backup and recreate CageFS)")])]),t._v(" "),s("tr",[s("td",[t._v("-u")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --update ")])]),t._v(" "),s("td",[t._v("update files in CageFS (add new and modified files to CageFS, remove unneeded files)")])]),t._v(" "),s("tr",[s("td",[t._v("-f")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --force ")])]),t._v(" "),s("td",[t._v("recreate CageFS (do not make backup, overwrite existing files)")])]),t._v(" "),s("tr",[s("td",[t._v("-d")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --dont-clean ")])]),t._v(" "),s("td",[t._v("do not delete any files from skeleton (use with "),s("span",{staticClass:"notranslate"},[t._v(" --update ")]),t._v(" option)")])]),t._v(" "),s("tr",[s("td",[t._v("-k")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --hardlink ")])]),t._v(" "),s("td",[t._v("use hardlinks if possible")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --create-mp ")])]),t._v(" "),s("td",[t._v("Creates "),s("em",[t._v("/etc/cagefs/cagefs.mp")]),t._v(" file")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --mount-skel ")])]),t._v(" "),s("td",[t._v("mount CageFS skeleton directory")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --unmount-skel ")])]),t._v(" "),s("td",[t._v("unmount CageFS skeleton directory")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --remove-all ")])]),t._v(" "),s("td",[t._v("disable CageFS, remove templates and "),s("em",[t._v("/var/cagefs")]),t._v(" directory")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --sanity-check ")])]),t._v(" "),s("td",[t._v("perform basic self-diagnistics of common cagefs-related issues (mostly useful for support)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --addrpm ")])]),t._v(" "),s("td",[t._v("add rpm-packages in CageFS (run "),s("span",{staticClass:"notranslate"},[s("code",[t._v("cagefsctl --update")])]),t._v(" in order to apply changes)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --delrpm ")])]),t._v(" "),s("td",[t._v("remove rpm-packages from CageFS (run "),s("span",{staticClass:"notranslate"},[s("code",[t._v("cagefsctl --update")])]),t._v(" in order to apply changes)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --list-rpm ")])]),t._v(" "),s("td",[t._v("list rpm-packages that are installed in CageFS")])]),t._v(" "),s("tr",[s("td",[t._v("-e")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --enter ")])]),t._v(" "),s("td",[t._v("enter into user's CageFS as root")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --update-list ")])]),t._v(" "),s("td",[t._v("update specified files only (paths are read from stdin)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --update-etc ")])]),t._v(" "),s("td",[t._v("update "),s("em",[t._v("/etc")]),t._v(" directory of all or specified users")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --set-update-period ")])]),t._v(" "),s("td",[t._v("set min period of update of CageFS in days (default = 1 day)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --force-update ")])]),t._v(" "),s("td",[t._v("force update of CageFS (ignore period of update)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --force-update-etc ")])]),t._v(" "),s("td",[t._v("force update of "),s("em",[t._v("/etc")]),t._v(" directories for users in CageFS")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --reconfigure-cagefs ")])]),t._v(" "),s("td",[t._v("configure CageFS integration with other software (control panels, database servers, etc)")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Use the following syntax to manage users:"),e("br"),this._v(" "),e("span",{staticClass:"notranslate"},[e("code",[this._v("/usr/sbin/cagefsctl [OPTIONS] username [more usernames]")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-m")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --remount ")])]),t._v(" "),s("td",[t._v("remount specified user(s)")])]),t._v(" "),s("tr",[s("td",[t._v("-M")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --remount-all ")])]),t._v(" "),s("td",[t._v("remount CageFS skeleton directory and all users (use this each time you have changed "),s("em",[t._v("cagefs.mp")]),t._v(" file")])]),t._v(" "),s("tr",[s("td",[t._v("-w")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --unmount ")])]),t._v(" "),s("td",[t._v("unmount specified user(s)")])]),t._v(" "),s("tr",[s("td",[t._v("____")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --unmount-dir ")])]),t._v(" "),s("td",[t._v("unmount specified dir for all users")])]),t._v(" "),s("tr",[s("td",[t._v("-W")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --unmount-all ")])]),t._v(" "),s("td",[t._v("unmount CageFS skeleton directory and all users")])]),t._v(" "),s("tr",[s("td",[t._v("-l")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --list ")])]),t._v(" "),s("td",[t._v("list users that entered in CageFS")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --list-logged-in ")])]),t._v(" "),s("td",[t._v("list users that entered in CageFS via SSH")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --enable ")])]),t._v(" "),s("td",[t._v("enable CageFS for the user")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --disable ")])]),t._v(" "),s("td",[t._v("disable CageFS for the user")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --enable-all ")])]),t._v(" "),s("td",[t._v("enable all users, except specified in "),s("em",[t._v("/etc/cagefs/users.disabled")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --disable-all ")])]),t._v(" "),s("td",[t._v("disable all users, except specified in "),s("em",[t._v("/etc/cagefs/users.enabled")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --display-user-mode ")])]),t._v(" "),s("td",[t._v("display the current mode ( "),s("span",{staticClass:"notranslate"},[t._v(' "Enable All" ')]),t._v(" or "),s("span",{staticClass:"notranslate"},[t._v(' "Disable All" ')]),t._v(" )")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --toggle-mode ")])]),t._v(" "),s("td",[t._v("toggle mode saving current lists of users (lists of enabled and disabled users remain unchanged)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --list-enabled ")])]),t._v(" "),s("td",[t._v("list enabled users")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --list-disabled ")])]),t._v(" "),s("td",[t._v("list disabled users")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --user-status ")])]),t._v(" "),s("td",[t._v("print status of specified user (enabled or disabled)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --getprefix ")])]),t._v(" "),s("td",[t._v("display prefix for user")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[this._v(" PHP Selector ")]),this._v(" related options:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --setup-cl-selector ")])]),t._v(" "),s("td",[t._v("setup "),s("span",{staticClass:"notranslate"},[t._v(" PHP Selector ")]),t._v(" or register new alt-php versions")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --remove-cls-selector ")])]),t._v(" "),s("td",[t._v("unregister alt-php versions, switch users to default php version when needed")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --rebuild-alt-php-ini ")])]),t._v(" "),s("td",[t._v("rebuild "),s("em",[t._v("alt_php.ini")]),t._v(" file for specified users (or all users if none specified)")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --validate-alt-php-ini ")])]),t._v(" "),s("td",[t._v("same as "),s("span",{staticClass:"notranslate"},[s("code",[t._v("--rebuild-alt-php-ini")])]),t._v(" but also validates "),s("em",[t._v("alt_php.ini")]),t._v(" options")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --cl-selector-reset-versions ")])]),t._v(" "),s("td",[t._v("reset php version for specifed users to default (or all users if none specified)")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --cl-selector-reset-modules ")])]),t._v(" "),s("td",[t._v("reset php modules (extensions) for specific users to defaults (or all users if none specified)")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --create-virt-mp ")])]),t._v(" "),s("td",[t._v("create virtual mount points for the user")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --create-virt-mp-all ")])]),t._v(" "),s("td",[t._v("create virtual mount points for all users")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --remount-virtmp ")])]),t._v(" "),s("td",[t._v("create virtual mount points and remount user")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" --apply-global-php-ini ")])]),t._v(" "),s("td",[t._v("use with 0, 1 or 2 arguments from the list: "),s("span",{staticClass:"notranslate"},[s("code",[t._v("error_log")]),t._v(", "),s("code",[t._v("date.timezone")])]),t._v(" without arguments applies all global php options including the two above")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("___")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --disable-cagefs ")])]),t._v(" "),s("td",[t._v("disable CageFS")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --cagefs-status ")])]),t._v(" "),s("td",[t._v("print CageFS status: ( "),s("span",{staticClass:"notranslate"},[t._v(" enabled ")]),t._v(" or "),s("span",{staticClass:"notranslate"},[t._v(" disabled ")]),t._v(" )")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --set-min-uid ")])]),t._v(" "),s("td",[t._v("Set min "),s("span",{staticClass:"notranslate"},[t._v(" UID ")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --get-min-uid ")])]),t._v(" "),s("td",[t._v("Display current MIN_UID setting")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --print-suids ")])]),t._v(" "),s("td",[t._v("Print list of "),s("span",{staticClass:"notranslate"},[t._v(" SUID ")]),t._v(" and SGID programs in skeleton")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --do-not-ask ")])]),t._v(" "),s("td",[t._v("assume "),s("span",{staticClass:"notranslate"},[t._v(' "yes" ')]),t._v(" in all queries (should be the first option in command)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --clean-var-cagefs ")])]),t._v(" "),s("td",[t._v("clean "),s("em",[t._v("/var/cagefs")]),t._v(" directory (remove data of non-existent users)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --set-tmpwatch ")])]),t._v(" "),s("td",[t._v("set "),s("code",[t._v("tmpwatch")]),t._v(" command and parameters (save to "),s("em",[t._v("/etc/cagefs/cagefs.ini")]),t._v(" file)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --tmpwatch ")])]),t._v(" "),s("td",[t._v("execute tmpwatch (remove outdated files in tmp directories in CageFS for all users)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --toggle-plugin ")])]),t._v(" "),s("td",[t._v("disable/enable CageFS plugin")])]),t._v(" "),s("tr",[s("td",[t._v("-v")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --verbose ")])]),t._v(" "),s("td",[t._v("verbose output")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --wait-lock ")])]),t._v(" "),s("td",[t._v("wait for end of execution of other "),s("code",[t._v("cagefsctl")]),t._v(" processes (when needed) before execution of the command")])]),t._v(" "),s("tr",[s("td",[t._v("-h")]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" --help ")])]),t._v(" "),s("td",[t._v("this message")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"running-command-inside-cagefs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-command-inside-cagefs","aria-hidden":"true"}},[this._v("#")]),this._v(" Running Command Inside CageFS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("em",[this._v("[lve-wrappers 0.6-1+]")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('$ /bin/su - $USERNAME  -c "_command_"\n')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('$ /sbin/cagefs_enter_user $USERNAME "_command_"\n')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you disable CageFS for a user, then "),e("span",{staticClass:"notranslate"},[e("code",[this._v("cagefs_enter")])]),this._v(" will be executed without "),e("span",{staticClass:"notranslate"},[e("code",[this._v("proxyexec")])]),this._v(" .")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("You can forcibly disable "),s("span",{staticClass:"notranslate"},[s("code",[t._v("cagefs_enter")])]),t._v(" start via "),s("span",{staticClass:"notranslate"},[s("code",[t._v("proxyexec")])]),t._v(" for all users (regardless if CageFS is enabled or disabled) by specifying the parameter "),s("span",{staticClass:"notranslate"},[s("em",[t._v("cagefs_enter_proxied=0")]),t._v(" in "),s("em",[t._v("/etc/sysconfig/cloudlinux")])]),t._v(" .")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("span",{staticClass:"notranslate"},[s("em",[t._v("/bin/cagefs_enter.proxied")])]),t._v(" can be executed instead of "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/bin/cagefs_enter")])]),t._v(" to enter CageFS without "),s("span",{staticClass:"notranslate"},[s("code",[t._v("proxyexec")])]),t._v(" . Note that starting "),s("span",{staticClass:"notranslate"},[s("code",[t._v("cagefs_enter")])]),t._v(" via "),s("span",{staticClass:"notranslate"},[s("code",[t._v("proxyexec")])]),t._v(" is necessary to enable sending local notification messages to users with enabled CageFS. "),s("span",{staticClass:"notranslate"},[s("code",[t._v("cagefs_enter")])]),t._v(" is executed via "),s("span",{staticClass:"notranslate"},[s("code",[t._v("proxyexec")])]),t._v(" by default.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"sanity-check"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sanity-check","aria-hidden":"true"}},[this._v("#")]),this._v(" Sanity Check")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("em",[this._v("[ CageFS 6.0-34+]")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS "),e("span",{staticClass:"notranslate"},[e("code",[this._v("--sanity-check")])]),this._v(" utility allows to check CageFS configuration consistency, so that an administrator can save the time investigating issues with CageFS and ensure that custom configuration is correct.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("cagefsctl --sanity-check\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("em",[this._v("Check cagefs "),e("span",{staticClass:"notranslate"},[e("code",[this._v("users.enabled")])]),this._v(" is a directory")]),this._v(" - ensures that if  "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/users.enabled")])]),this._v(" exists, then it is a directory, not a file (if it is recognized as a file, then it would cause a breakdown).")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("em",[this._v("Check cagefs "),e("span",{staticClass:"notranslate"},[e("code",[this._v("users.disabled")])]),this._v(" is a directory")]),this._v(" - ensures that if  "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/users.disabled")])]),this._v(" exists, then it is a directory, not a file (if it is recognized as a file, then it would cause a breakdown).")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("em",[this._v("Check cagefs "),e("span",{staticClass:"notranslate"},[e("code",[this._v("disable.etcfs")])]),this._v(" exists")]),this._v(" - checks if "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/etc.safe/disable.etcfs")])]),this._v(" exists.")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[s("em",[t._v("Check cagefs users can enter cagefs")]),t._v(" - chooses two users in the system with enabled CageFS (the first and the second ones in the unsorted list) and tries to log in to CageFS under their credentials and see what happens. It runs "),s("span",{staticClass:"notranslate"},[s("code",[t._v('su -l "$USER" -s /bin/bash -c "whoami"')])]),t._v(" and compares the output with the "),s("span",{staticClass:"notranslate"},[t._v(" $USER ")]),t._v(" and "),s("span",{staticClass:"notranslate"},[t._v(" su ")]),t._v(" command retcode estimation.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("If a login fails, it can be due to various reasons, that can only be determined in manual mode. The checker only gives the output of the command.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/*.proxy.commands")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" OK ")]),t._v(" - the check succeeded.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" FAILED ")]),t._v(" - the check revealed a problem.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" SKIPPED ")]),t._v(" - the check was skipped as it made no sense in such environment (e.g. wrong control panel) or can not be performed for some reason (e.g no users with enabled CageFS found). The actual result does not mean that a problem exists and can be considered as positive.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" INTERNAL_TEST_ERROR ")]),t._v(" - the check failed because of a problem inside the checker itself. Must be reported to the developers.")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In case if at least one of the checks resulted neither "),e("span",{staticClass:"notranslate"},[this._v(" OK ")]),this._v(" nor "),e("span",{staticClass:"notranslate"},[this._v(" SKIPPED ")]),this._v(" then the checker will end with ret code >0.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"cagefs-quirks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cagefs-quirks","aria-hidden":"true"}},[this._v("#")]),this._v(" CageFS Quirks")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("lastlog will not work ( "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/log/lastlog")])]),this._v(" ).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("PHP will load php.ini from "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/selector/php.ini.")])]),this._v(" That file is actually a link to the real "),e("em",[this._v("php.ini")]),this._v(" file from your system. So the same "),e("em",[this._v("php.ini")]),this._v(" will be loaded in the end.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("You have to run "),e("span",{staticClass:"notranslate"},[e("code",[this._v("cagefsctl --update")])]),this._v(" any time you have modified "),e("em",[this._v("php.ini")]),this._v(", or you want to get new/updated software inside CageFS.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("span",{staticClass:"notranslate"},[e("code",[this._v("jailshell")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"file-system-templates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-system-templates","aria-hidden":"true"}},[this._v("#")]),this._v(" File System Templates")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS creates a filesystem template in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share/cagefs-skeleton")])]),this._v(" directory. CageFS template will be mounted for each customer.  The template is created by running:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# /usr/sbin/cagefsctl --init\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --update\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The behavior of the commands (and the files copied into "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share/cagefs-skeleton")])]),this._v(" directory) depends on the configuration files in "),e("em",[this._v("/etc/cagefs/conf.d")]),e("br"),this._v("\nYou can add additional files, users, groups and devices into CageFS template by adding .cfg file, and running:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --update\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ /usr/sbin/cagefsctl --update\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Here is an example "),e("span",{staticClass:"notranslate"},[e("em",[this._v("openssh-clients.cfg")])]),this._v(" file:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("[openssh-clients]\n\ncomment=OpenSSH Clients\n\npaths=/etc/ssh/ssh_config, /bin/hostname, /usr/bin/scp, /usr/bin/sftp, /usr/bin/slogin, /usr/bin/ssh, /usr/bin/ssh-add, /usr/bin/ssh-agent, /usr/bin/ssh-copy-id, /usr/bin/.ssh.hmac, /usr/bin/ssh-keyscan, /usr/libexec/openssh/sftp-server, /etc/environment, /etc/security/pam_env.conf\n\ndevices=/dev/ptmx\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Example "),e("span",{staticClass:"notranslate"},[e("em",[this._v("mail.cfg")])]),this._v(" file:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("[mail]\n\ncomment=Mail tools\n\npaths=/bin/mail, /etc/aliases.db, /etc/mail, /etc/mailcap, /etc/mail.rc, /etc/mime.types, /etc/pam.d/smtp.sendmail, /etc/rc.d/init.d/sendmail, /etc/smrsh, /etc/sysconfig/sendmail, /usr/bin/hoststat, /usr/bin/Mail, /usr/bin/mailq.sendmail, /usr/bin/makemap, /usr/bin/newaliases.sendmail, /usr/bin/purgestat, /usr/bin/rmail.sendmail, /usr/lib64/sasl2/Sendmail.conf, /usr/lib/mail.help, /usr/lib/mail.tildehelp, /usr/lib/sendmail.sendmail, /usr/sbin/mailstats, /usr/sbin/makemap, /usr/sbin/praliases, /usr/sbin/sendmail.sendmail, /usr/sbin/smrsh, /var/log/mail, /var/spool/clientmqueue, /var/spool/mqueue\n\nusers=smmsp\n\ngroups=smmsp\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("There is an easy way to add/delete files from particular "),s("span",{staticClass:"notranslate"},[t._v(" RPMs ")]),t._v(" into CageFS. That can be done by using "),s("span",{staticClass:"notranslate"},[s("code",[t._v("--addrpm")]),t._v(" and "),s("code",[t._v("--delrpm")])]),t._v(" options in "),s("span",{staticClass:"notranslate"},[s("code",[t._v("cagefsctl")])]),t._v(" . Like:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --addrpm ffmpeg\n$ cagefsctl --update\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("ffmpeg RPM should be installed on the system already.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"excluding-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#excluding-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Excluding Files")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To exclude files and directories from CageFS, edit file:"),e("br"),this._v(" "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/custom.black.list")])]),e("br"),this._v("\nAnd add files or directories in there, one per line.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Please do not edit "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/black.list")])]),this._v(" file because it is replaced during the update of CageFS package.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"excluding-users"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#excluding-users","aria-hidden":"true"}},[this._v("#")]),this._v(" Excluding Users")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To exclude users from CageFS, create a file (any name would work) inside "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/exclude")])]),this._v(" folder, and list users that you would like to exclude from CageFS in that file.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mount-points"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mount-points","aria-hidden":"true"}},[this._v("#")]),this._v(" Mount Points")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("span",{staticClass:"notranslate"},[this._v(" /usr/share/cagefs-skeleton ")]),this._v(" with safe files is created")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("Any directory from the server that needs to be shared across all users is mounted into "),e("span",{staticClass:"notranslate"},[this._v(" /usr/share/cagefs-skeleton ")]),this._v("\n(a list of such directories is defined in /etc/cagefs/cagefs.mp)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("span",{staticClass:"notranslate"},[this._v(" /var/cagefs/[prefix]/username ")]),this._v(" directory for each user. Prefix is defined as last two digits of user id. User id is taken from "),e("span",{staticClass:"notranslate"},[this._v(" /etc/passwd ")]),this._v(" file.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("Separate /etc directory is created and populated for each user inside "),e("span",{staticClass:"notranslate"},[this._v(" /var/cagefs/[prefix]/username ")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("/tmp directory is mounted for each user separately into "),e("span",{staticClass:"notranslate"},[this._v(" ~username/.cagefs-tmp directory ")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("code",[this._v("@/full/path/to/directory,permission notation")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("code",[this._v("@/var/run/screen,777")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Such entry would create separate "),e("span",{staticClass:"notranslate"},[this._v(" /var/run/screen ")]),this._v(" for each user, with permissions set to 777")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("/var/lib/mysql\n/var/lib/dav\n/var/www/cgi-bin\n/var/spool\n/dev/pts\n/usr/local/apache/domlogs\n/proc\n/opt\n@/var/spool/cron,700\n@/var/run/screen,777\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --remount-all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"per-user-virtual-mount-points"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#per-user-virtual-mount-points","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("Per user virtual mount points")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("[CageFS 5.1 and higher]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("code",[this._v("/var/cagefs/[prefix]/[user]/virt.mp")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("virtdir1,mask\n@subdir1,mask\n@subdir2,mask\nvirdir2,mask\n@subdir3,mask\n@subdir4,mask\n>virtdir3,mask\n@subdir5,mask\n@subdir6,mask\n# comments\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("span",{staticClass:"notranslate"},[s("em",[t._v("mask")])]),t._v(" is always optional, if missing 0755 is used")]),t._v(" "),s("li",[t._v("Create virtual directory "),s("span",{staticClass:"notranslate"},[s("em",[t._v("subdir/virtdir")])]),t._v(" , mount it to:\n"),s("ul",[s("li",[s("span",{staticClass:"notranslate"},[t._v(" skeleton "),s("em",[t._v("jaildir/virtdir")])])]),t._v(" "),s("li",[t._v("inside virtual directory, create directories "),s("span",{staticClass:"notranslate"},[s("em",[t._v("subdir1, subdir2")])])]),t._v(" "),s("li",[t._v("mount "),s("span",{staticClass:"notranslate"},[s("em",[t._v("virtdir1/subdir1")])]),t._v(" to "),s("span",{staticClass:"notranslate"},[s("em",[t._v("subdir/virtdir/subdir1")])])]),t._v(" "),s("li",[t._v("if "),s("span",{staticClass:"notranslate"},[s("em",[t._v("virtdir")])]),t._v(" is started with >, create directory "),s("span",{staticClass:"notranslate"},[s("em",[t._v("subdir/virtdir")])]),t._v(" , but don't mount it into "),s("span",{staticClass:"notranslate"},[s("em",[t._v("jaildir")])]),t._v(" . This is needed for cases when "),s("span",{staticClass:"notranslate"},[s("em",[t._v("virtdir")])]),t._v(" is inside home base dir.")])])]),t._v(" "),s("li",[t._v("if file "),s("em",[t._v("/var/cagefs/[prefix]/[user]/virt.mp")]),t._v(" is missing -- no virt directories are loaded for that user.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For example if we have Plesk 11.5 with two users "),e("span",{staticClass:"notranslate"},[e("em",[this._v("cltest1")])]),this._v(" , and "),e("span",{staticClass:"notranslate"},[e("em",[this._v("cltest2")])]),this._v(" :\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("cltest1 uid 10000 has domains: cltest1.com, cltest1-addon.com and sub1.cltest1.com\ncltest2 uid 10001 has domains: cltest2.com, cltest2-addon.com\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In such case we would have file "),e("em",[this._v("/var/cagefs/00/cltest1/virt.mp")]),this._v(" :\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(">/var/www/vhosts/system,0755\n@cltest1-addon.com,0755\n@cltest1.com,0755\n@sub1.cltest1.com,0755\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("and file: "),e("em",[this._v("/var/cagefs/01/cltest2/virt.mp:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(">/var/www/vhosts/system\n@cltest2-addon.com\n@cltest2.com\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"split-by-username"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#split-by-username","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("Split by Username")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("[CageFS 5.3.1+]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("/home/httpd/fcgi-bin/user1\n/home/httpd/fcgi-bin/user2\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("%/home/httpd/fcgi-bin\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("cagefsctl --remount-all\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("After that each subdirectory of "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/httpd/fcgi-bin")])]),t._v(" will be mounted for appropriate user in CageFS: "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/httpd/fcgi-bin/user1")])]),t._v(" will be mounted for "),s("span",{staticClass:"notranslate"},[t._v(" user1 ")]),t._v(" and "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/httpd/fcgi-bin/user2")])]),t._v(" will be mounted for "),s("span",{staticClass:"notranslate"},[t._v(" user2 ")]),t._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"mounting-user’s-home-directory-inside-cagefs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mounting-user’s-home-directory-inside-cagefs","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("Mounting user’s home directory inside CageFS")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS 6.1-1 (and later) has improved mounting user’s home directory that is applied for users with home directories like "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/home/user")]),this._v(" or "),e("em",[this._v("/homeN/user")])]),this._v(" (where "),e("span",{staticClass:"notranslate"},[this._v(" N ")]),this._v(" = 0,1,..9).")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("In such case, earlier versions of CageFS always mount user’s home directory to "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/user")])]),t._v(" and create symlink "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/homeN -> /home")])]),t._v(" when needed, so user’s home directory can be accessed both via "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/user")])]),t._v(" and "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/homeN/user")])]),t._v(" . This quirk leads to some rare incompatibilities between CageFS and other software (for example OpenCart), because real path of user’s home directory in CageFS and in real file system can differ.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("New CageFS mounts user’s home directory in a way that its real path in CageFS is always the same as in real file system. Additionally, CageFS searches for symlinks like\n"),e("span",{staticClass:"notranslate"},[e("em",[this._v("/homeX -> /homeY")])]),this._v(" and "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/homeX/user -> /homeY/user")])]),this._v(" in real system and creates such symlinks in user’s CageFS when found.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# touch /etc/cagefs/disable.home.dirs.search\n# cagefsctl --force-update\n# cagefsctl --remount-all\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v('New mounting mode will be disabled automatically when "mounting base home directory" mode is enabled '),s("span",{staticClass:"notranslate"},[t._v(" ("),s("code",[t._v("mount_basedir=1")]),t._v(" setting in "),s("em",[t._v("/etc/cagefs/cagefs.base.home.dirs")])]),t._v(" file).")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"base-home-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#base-home-directory","aria-hidden":"true"}},[this._v("#")]),this._v(" Base Home Directory")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you have a custom setup where home directories are in a special format, like: "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/home/$USERNAME/data")])]),this._v(" , you can specify it using regular expressions. This is needed by CageFS to create safe home space for end user, where no other users are visible.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("We will create empty: "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/cagefs/[prefix]/$USERNAME/home")])]),this._v(" , and then mount "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/home/$USERNAME")])]),this._v(" in that directory")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To do that, create a file: "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/cagefs.base.home.dirs")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("^/home/\n^/var/www/users/\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If there is no such file, the home directory without last component will be considered as a base dir, like with\n"),e("span",{staticClass:"notranslate"},[e("em",[this._v("/home/$USERNAME")])]),this._v(" we would create "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/cagefs/[prefix]/$USERNAME/home")])]),this._v(" , and then mount\n"),e("span",{staticClass:"notranslate"},[e("em",[this._v("/home/$USERNAME")])]),this._v(" in there")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("With "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/$USERNAME/data")])]),t._v(" as a home dir, we would assume that "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/$USERNAME")])]),t._v(" is the base directory, and we would create "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/cagefs/[prefix]/$USERNAME/home/$USERNAME/data")])]),t._v(" and then we would mount "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/home/$USERNAME/data")])]),t._v(" -- which would cause each user to see empty base directories for other users, exposing user names.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Sharing home directory structure among users")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("When you want to share directory structure among multiple users, you can add following line at the top of the "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/cagefs.base.home.dirs")])]),this._v(" file. This is useful on the systems that support sites with multiple users, with different home directories inside the main 'site' directory.\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("mount_basedir=1\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("span",{staticClass:"notranslate"},[t._v(" user1 ")]),t._v(" has home directory "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/www/vhosts/sitename.com/web_users/user1")])]),t._v(" "),s("span",{staticClass:"notranslate"},[t._v(" user2 ")]),t._v(" has home directory "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/www/vhosts/sitename.com/web_users/user2")])]),t._v("\nsite admin has home directory "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/www/vhosts/sitename.com")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("So, content of "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/cagefs.base.home.dirs")])]),this._v(" should be the following:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("mount_basedir=1\n^/var/www/vhosts/[^/]+\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Directory structure in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/www/vhosts/sitename.com")])]),this._v(" will be mounted in CageFS for appropriate users."),e("br"),this._v("\nEach user will have access to whole directory structure in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/www/vhosts/sitename.com")])]),this._v(" (according to their permissions).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("You should execute "),e("span",{staticClass:"notranslate"},[e("code",[this._v("cagefsctl --remount-all")])]),this._v(" in order to apply changes to CageFS (i.e. remount home directories).")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"postgresql-support"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-support","aria-hidden":"true"}},[this._v("#")]),this._v(" PostgreSQL support")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS works with any PostgreSQL version installed from CloudLinux or CentOS repositories. PostgreSQL packages for CloudLinux 7 come from the upstream (CentOS) unmodified. PostgreSQL’s socket is located in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/run/postgresql")])]),this._v(" directory. This directory is mounted to CageFS by default (in cagefs-5.5-6.34 or later).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("/var/run/postgresql\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("tо "),e("em",[this._v("/etc/cagefs/cagefs.mp")]),this._v(" file and then execute:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("cagefsctl --remount-all \n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS provides separate "),e("em",[this._v("/tmp")]),this._v(" directory for each end user. Yet, PostgreSQL keeps its Unix domain socket inside server's main "),e("em",[this._v("/tmp")]),this._v(" directory. In addition to that, the location is hard coded inside PostgreSQL libraries.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To resolve the issue, CloudLinux provides a version of PostgreSQL with modified start up script that can store PostgreSQL's socket in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/run/postgres.")])]),this._v(" The script automatically creates link from "),e("em",[this._v("/tmp")]),this._v(" to that socket to prevent PostgreSQL dependent applications from breaking.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In addition to that, CageFS knows how to correctly link this socket inside end user's "),e("em",[this._v("/tmp")]),this._v(" directory.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("p",[t._v("Make sure you have updated to latest version of PostgreSQL.")])]),t._v(" "),s("li",[s("p",[t._v("Edit file "),s("em",[t._v("/etc/sysconfig/postgres")]),t._v(", and uncomment "),s("span",{staticClass:"notranslate"},[s("em",[t._v("SOCK_DIR")])]),t._v(" line.")])]),t._v(" "),s("li",[s("p",[t._v("Update CageFS configuration by running:")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("cagefsctl  --reconfigure-cagefs\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("Restart PostgreSQL by running:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ service postgresql restart \n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you are using cPanel, you would also need to modify file: "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cron.daily/tmpwatch")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("flags=-umc \n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("flags=-umcl\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pam-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pam-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" PAM Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS depends on "),e("span",{staticClass:"notranslate"},[e("strong",[this._v("pam_lve")])]),this._v(" module tor PAM enabled services. When installed, the module is automatically installed for following services:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("sshd")]),this._v(" "),e("li",[this._v("crond")]),this._v(" "),e("li",[this._v("su")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The following line is added to corresponding file in "),e("em",[this._v("/etc/pam.d/")]),this._v(":\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("session    required     pam_lve.so      100     1\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Where 100 stands for minimum "),e("span",{staticClass:"notranslate"},[this._v(" UID ")]),this._v(" to put into "),e("span",{staticClass:"notranslate"},[this._v(" CageFS & LVE ")]),this._v(" , and 1 stands for CageFS enabled.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"executing-by-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#executing-by-proxy","aria-hidden":"true"}},[this._v("#")]),this._v(" Executing By Proxy")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Some software has to run outside CageFS to be able to complete its job. This includes such programs as "),e("span",{staticClass:"notranslate"},[e("strong",[this._v("passwd, sendmail")]),this._v(" ,  ")]),this._v(" etc.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CloudLinux uses "),e("span",{staticClass:"notranslate"},[this._v(" proxyexec ")]),this._v(" technology to accomplish this goal. You can define any program to run outside CageFS, by specifying it in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/custom.proxy.commands")])]),this._v(" file. Do not edit existing "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/proxy.commands")])]),this._v(" as it will be overwritten with next CageFS update.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --update\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("All the cPanel scripts located in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/local/cpanel/cgi-sys/")])]),this._v(" that user might need to execute should be added to "),e("span",{staticClass:"notranslate"},[e("em",[this._v("proxy.commands")])]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Users with duplicate UIDs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The syntax of "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/*.proxy.commands")])]),this._v(" files is as follows:"),e("br"),this._v(" "),e("span",{staticClass:"notranslate"},[e("em",[this._v("ALIAS:wrapper_name=username:path_to_executable")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Mandatory parameters are "),e("span",{staticClass:"notranslate"},[e("em",[this._v("ALIAS")])]),this._v(" and "),e("span",{staticClass:"notranslate"},[e("em",[this._v("path_to_executable")])]),this._v(" .")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" ALIAS ")]),t._v(" - any name which is unique within all "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/cagefs/*.proxy.commands")])]),t._v(" files;")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" wrapper_name ")]),t._v(" - the name of wrapper file, which is used as a replacement for executable file "),s("span",{staticClass:"notranslate"},[s("em",[t._v("path_to_executable")]),t._v(" inside CageFS ")]),t._v(" . Wrapper files are located in "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/usr/share/cagefs/safeprograms")])]),t._v(" . If wrapper name is not specified, then default wrapper "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/usr/share/cagefs/safeprograms/cagefs.proxy.program")])]),t._v(" is used. Also, a reserved word "),s("span",{staticClass:"notranslate"},[s("code",[t._v("noproceed")])]),t._v(" can be used, it will intend that wrapper is not in use (installed before) - applied for the commands with several "),s("span",{staticClass:"notranslate"},[t._v(" ALIAS ")]),t._v(" , as in the example below.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" username ")]),t._v(" - the name of a user on whose behalf "),s("span",{staticClass:"notranslate"},[s("em",[t._v("path_to_executable")])]),t._v(" will run in the real system. If "),s("span",{staticClass:"notranslate"},[t._v(" username ")]),t._v(" is not specified, then "),s("span",{staticClass:"notranslate"},[s("em",[t._v("path_to_executable")])]),t._v(" will run on behalf the same user that is inside CageFS.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[t._v(" path_to_executable ")]),t._v(" - the path to executable file which will run via "),s("span",{staticClass:"notranslate"},[s("code",[t._v("proxyexec")])]),t._v(" .")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Example of a simple command executed via "),e("span",{staticClass:"notranslate"},[this._v(" proxyexec ")]),this._v(" :\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("SENDMAIL=/usr/sbin/sendmail\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Example of "),s("span",{staticClass:"notranslate"},[t._v(" crontab ")]),t._v(" command execution with custom wrapper under "),s("span",{staticClass:"notranslate"},[t._v(" root ")]),t._v(" (privilege escalation). The command uses two "),s("span",{staticClass:"notranslate"},[t._v(" ALIAS ")]),t._v(" , that is why in the second line "),s("span",{staticClass:"notranslate"},[s("code",[t._v("noproceed")])]),t._v(" is specified instead of wrapper name.\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("CRONTAB_LIST:cagefs.proxy.crontab=root:/usr/bin/crontab\nCRONTAB_SAVE:noproceed=root:/usr/bin/crontab\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Sometimes hosters may have users with non unique "),e("span",{staticClass:"notranslate"},[this._v(" UIDs ")]),this._v(" . Thus, "),e("span",{staticClass:"notranslate"},[e("code",[this._v("proxyexec")])]),this._v(" may traverse users directory to find a specific one. That behavior turns into inappropriate if users directory is not cached locally (for example LDAP is in use).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("touch /etc/cagefs/proxy.disable.duid\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("rm /etc/cagefs/proxy.disable.duid\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"custom-etc-files-per-customer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-etc-files-per-customer","aria-hidden":"true"}},[this._v("#")]),this._v(" Custom /etc files per customer")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("[4.0-5 and later]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To create a custom file in /etc directory for end user, create a directory:"),e("br"),this._v(" "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/custom.etc/[username]")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For example, if you want to create custom "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/hosts")]),this._v(" file for USER1 ")]),this._v(" , create a directory:"),e("br"),this._v(" "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/custom.etc/USER1")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Inside that directory, create a "),e("span",{staticClass:"notranslate"},[e("em",[this._v("hosts")])]),this._v(" file, with the content for that user.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --update-etc USER1\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --update-etc\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To remove a custom file, remove it from "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/custom.etc/[USER]")])]),this._v(" directory, and re-run:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --update-etc\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"moving-cagefs-skeleton-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#moving-cagefs-skeleton-directory","aria-hidden":"true"}},[this._v("#")]),this._v(" Moving cagefs-skeleton directory")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Sometimes you might need to move "),e("span",{staticClass:"notranslate"},[this._v(" cagefs-skeleton ")]),this._v(" from "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share")])]),this._v(" to another partition.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("If "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share/cagefs-skeleton")])]),this._v(" is not created yet ( "),e("span",{staticClass:"notranslate"},[this._v(" cagefsctl --init ")]),this._v(" wasn't executed), then execute:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ mkdir /home/cagefs-skeleton \n$ ln -s /home/cagefs-skeleton /usr/share/cagefs-skeleton \n$ cagefsctl --init\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("If "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share/cagefs-skeleton")])]),this._v(" already exists:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('$ cagefsctl --disable-cagefs \n$ cagefsctl --unmount-all\n# To ensure that the following command prints empty output: \n$ cat /proc/mounts | grep cagefs \n# if you see any cagefs entries, execute "cagefsctl --unmount-all" again.\n$ mv /usr/share/cagefs-skeleton /home/cagefs-skeleton \n$ ln -s /home/cagefs-skeleton /usr/share/cagefs-skeletoncagefsctl --enable-cagefs\n')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("On cPanel servers, if you place skeleton into "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/home")])]),this._v(" directory, then you should configure the following option:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("In "),s("em",[t._v("cPanel WHM")]),t._v(" choose "),s("span",{staticClass:"notranslate"},[s("em",[t._v("Server Configuration")])]),t._v(" and go to "),s("span",{staticClass:"notranslate"},[s("em",[t._v("Basic cPanel/WHM Setup")])]),t._v(" , then in "),s("span",{staticClass:"notranslate"},[s("em",[t._v("Basic Config")])]),t._v(" change "),s("span",{staticClass:"notranslate"},[s("em",[t._v("Additional home directories")])]),t._v(" default value to blank (not "),s("span",{staticClass:"notranslate"},[t._v(' "home" ')]),t._v(" ).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("If this option is not set, then cPanel will create new accounts in incorrect places.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"moving-var-cagefs-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#moving-var-cagefs-directory","aria-hidden":"true"}},[this._v("#")]),this._v(" Moving /var/cagefs directory")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To move "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/cagefs")])]),this._v(" to another location:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --disable-cagefs\n$ cagefsctl --unmount-all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Verify that "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/cagefs.bak")])]),this._v(' directory does not exist (if it exists - change name "cagefs.bak" to something else)')])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cp -rp /var/cagefs /new/path/cagefs\n$ mv /var/cagefs /var/cagefs.bak\n$ ln -s /new/path/cagefs /var/cagefs\n$ cagefsctl --enable-cagefs\n$ cagefsctl --remount-all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cat /proc/mounts | grep cagefs.bak\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ rm -rf /var/cagefs.bak\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tmp-directories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tmp-directories","aria-hidden":"true"}},[this._v("#")]),this._v(" TMP Directories")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS makes sure that each user has his own "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/tmp")])]),this._v(" directory, and that directory is the part of end-user's quota.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The actual location of the directory is "),e("span",{staticClass:"notranslate"},[e("em",[this._v("$USER_HOME/.cagefs/tmp")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Once a day, using cron job, "),e("span",{staticClass:"notranslate"},[this._v(" CageFS ")]),this._v(" will clean up user's "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/tmp")])]),this._v(" directory from all the files that haven't been accessed during 30 days.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --set-tmpwatch='/usr/sbin/tmpwatch -umclq 720'\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By default this is done at 03:37 AM, but you can also force the clean up outdated files that match 'chosen period' of all user's "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/tmp")])]),this._v(" directories without waiting for a job to be launched by "),e("span",{staticClass:"notranslate"},[this._v(" cronjob ")]),this._v(" . Just run:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cagefsctl --tmpwatch\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("em",[this._v("/var/cache/php-eaccelerator")])]),this._v(" (actual location "),e("span",{staticClass:"notranslate"},[e("em",[this._v("$USER_HOME/.cagefs/var/cache/php-eaccelerator")])]),this._v(" )")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can configure "),e("span",{staticClass:"notranslate"},[this._v(" tmpwatch ")]),this._v(" to clean custom directories inside "),e("span",{staticClass:"notranslate"},[this._v(" CageFS ")]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Create "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cagefs/cagefs.ini")])]),this._v(" configuration file and specify "),e("span",{staticClass:"notranslate"},[e("em",[this._v("tmpwatch_dirs")])]),this._v(" directive as follows:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("em",[this._v("tmpwatch_dirs=/dir1,/dir2")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("After that directories "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/dir1")])]),this._v(" and "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/dir2")])]),this._v(" inside CageFS  will be cleaned automatically.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Note that actual location of those directories in real file system is "),e("span",{staticClass:"notranslate"},[e("em",[this._v("$USER_HOME/.cagefs/dir1")])]),this._v(" and "),e("span",{staticClass:"notranslate"},[e("em",[this._v("$USER_HOME/.cagefs/dir2")])]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Cleanup PHP sessions")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For cPanel servers, CageFS version 6.0-42 or higher performs cleaning of PHP sessions based on "),e("span",{staticClass:"notranslate"},[e("em",[this._v("session.gc_maxlifetime")])]),this._v(" and "),e("span",{staticClass:"notranslate"},[e("em",[this._v("session.save_path")])]),this._v(" directives specified in proper "),e("span",{staticClass:"notranslate"},[e("em",[this._v("php.ini")])]),this._v(" files.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"notranslate"},[e("em",[this._v("session.gc_maxlifetime")])]),this._v(" directive default value is 1440 seconds. Those session files will be deleted, that were created or had metadata (ctime) changes more time ago than it is specified in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("session.gc_maxlifetime")]),this._v(" .  ")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For "),e("span",{staticClass:"notranslate"},[this._v(" Alt-PHP ")]),this._v(" versions "),e("span",{staticClass:"notranslate"},[e("em",[this._v("session.save_path")])]),this._v(" value is normally "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/tmp")])]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("For new installations of Alt-PHP packages, "),e("span",{staticClass:"notranslate"},[this._v(" session.save_path will be changed from /tmp to /opt/alt/phpNN/var/lib/php/session, ")]),this._v(" where NN corresponds to Alt-PHP version.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This applies to the following "),e("span",{staticClass:"notranslate"},[this._v(" Alt-PHP ")]),this._v(" versions (or later):")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("alt-php44-4.4.9-71;")]),t._v(" "),s("li",[t._v("alt-php51-5.1.6-81;")]),t._v(" "),s("li",[t._v("alt-php52-5.2.17-107;")]),t._v(" "),s("li",[t._v("alt-php53-5.3.29-59;")]),t._v(" "),s("li",[t._v("alt-php54-5.4.45-42;")]),t._v(" "),s("li",[t._v("alt-php55-5.5.38-24;")]),t._v(" "),s("li",[t._v("alt-php56-5.6.31-7;")]),t._v(" "),s("li",[t._v("alt-php70-7.0.23-5;")]),t._v(" "),s("li",[t._v("alt-php71-7.1.9-5;")]),t._v(" "),s("li",[t._v("alt-php72-7.2.0-0.rc.2.2.")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("When using EasyApache 3, "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.save_path")])]),t._v(" value is normally "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/cpanel/php/sessions/ea3")])]),t._v(" or "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/tmp")])]),t._v(" . Seettings for EasyApache 3 are usualy taken from the file "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/usr/local/lib/php.ini")]),t._v(" . ")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("When using EasyApache 4, "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.save_path")])]),t._v(" value is normally "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/cpanel/php/sessions/ea-phpXX")]),t._v(" ,  ")]),t._v(" where "),s("span",{staticClass:"notranslate"},[s("em",[t._v("XX")])]),t._v(" corresponds to PHP version.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Cleaning is started by cron "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/cron.d/cpanel_php_sessions_cron")])]),this._v(" , which starts the script "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/usr/share/cagefs/clean_user_php_sessions")])]),this._v(" twice within one hour.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The settings for ea-php are located in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/opt/cpanel/ea-phpXX/root/etc/php.d/local.ini")])]),this._v(" or in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/opt/cpanel/ea-phpXX/root/etc/php.ini")])]),this._v(" , where "),e("span",{staticClass:"notranslate"},[e("em",[this._v("XX")])]),this._v(" corresponds to the PHP version.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The settings for alt-php are located in "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/opt/alt/phpXX/etc/php.ini")])]),this._v(" files, where "),e("span",{staticClass:"notranslate"},[e("em",[this._v("XX")])]),this._v(" corresponds to PHP version.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("The cleaning script cleans php sessions for all PHP versions ( "),s("span",{staticClass:"notranslate"},[s("em",[t._v("ea-php")])]),t._v(" and "),s("span",{staticClass:"notranslate"},[s("em",[t._v("alt-php")])]),t._v(" ) regardless of whether a version is used or selected via "),s("span",{staticClass:"notranslate"},[t._v(" MultiPHP Manager ")]),t._v(" or "),s("span",{staticClass:"notranslate"},[t._v(" PHP Selector ")]),t._v(" . When different "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.gc_maxlifetime")])]),t._v(" values are specified for the same "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.save_path")])]),t._v(" (for different php versions), the cleaning script will use the least value for cleaning "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.save_path")])]),t._v(" . So, it is recommended to specify different "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.save_path")])]),t._v(" for each PHP version.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Users can define custom value of "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.gc_maxlifetime")]),t._v(" via PHP Selector ")]),t._v(" in order to configure PHP's garbage collector, but that will not affect the script for cleaning PHP sessions. The script cleans PHP sessions based on global values of "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.gc_maxlifetime")])]),t._v(" and "),s("span",{staticClass:"notranslate"},[s("em",[t._v("session.save_path")])]),t._v(" directives taken from files mentioned above. Settings in custom users’ "),s("span",{staticClass:"notranslate"},[t._v(" php.ini ")]),t._v(" files are ignored.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Cleanup PHP session files in Plesk")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For Plesk servers, "),e("span",{staticClass:"notranslate"},[this._v(" CageFS ")]),this._v(" version 6.0-52 or higher is provided with a special cron job for removing obsolete PHP session files. Cleanup script runs once an hour (similar to how it is done in Plesk).")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("p",[t._v("set by "),s("span",{staticClass:"notranslate"},[s("code",[t._v("session.save_path")])]),t._v(" directive in "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/opt/alt/phpXX/etc/php.ini")])]),t._v(" files. If "),s("span",{staticClass:"notranslate"},[t._v(" session.save_path ")]),t._v(" is missing, then "),s("span",{staticClass:"notranslate"},[t._v(" /tmp ")]),t._v(" is used. Session files lifetime is set by "),s("span",{staticClass:"notranslate"},[t._v(" session.gc_maxlifetime ")]),t._v(" directive. If it is not found, then 1440 seconds value is used (24 minutes, as in Plesk). Lifetime set in the file is only taken into consideration if it is longer than 1440 seconds, otherwise 1440 seconds is used. All the installed "),s("span",{staticClass:"notranslate"},[t._v(" Alt-PHP ")]),t._v(" versions are processed.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("em",[t._v("/var/lib/php/session")])]),t._v(" . Files lifetime is only defined by Plesk script "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/usr/lib64/plesk-9.0/maxlifetime")])]),t._v(" . If the script is missing or returns errors, then this directory is not processed.")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("all the users with "),s("span",{staticClass:"notranslate"},[t._v(" UID ")]),t._v(" higher than specified in "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/login.defs")])]),t._v(" are processed. Each user is processed independently from one another.")]),t._v(" "),s("li",[t._v("only directories inside "),s("span",{staticClass:"notranslate"},[t._v(" CageFS ")]),t._v(" are being cleaned. The paths of the same name in the physical  file system are not processed.")]),t._v(" "),s("li",[t._v("in all the detected directories, all the files with the names that correspond to "),s("span",{staticClass:"notranslate"},[s("code",[t._v("sess_")]),t._v(" search ")]),t._v(" mask are removed, the rest of the files are ignored.")]),t._v(" "),s("li",[t._v("the files older than specified lifetime are removed.")]),t._v(" "),s("li",[t._v("all non-fatal errors (lack of rights, missing directory) are ignored and do not affect the further work of the script.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Disable PHP sessions cleanup on cPanel and Plesk")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Here is a possible workaround for PHP session expiration problem (session lives longer than it is possible in a control panel). To use your own custom PHP sessions cleanup scripts - you can turn off built-in sessions cleanup implementation in the following way:\nadd "),e("span",{staticClass:"notranslate"},[e("code",[this._v("clean_user_php_sessions=false")]),this._v(" line to "),e("em",[this._v("/etc/sysconfig/cloudlinux")])]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"syslog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syslog","aria-hidden":"true"}},[this._v("#")]),this._v(" Syslog")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By default, "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/dev/log")])]),this._v(" should be available inside end user's "),e("span",{staticClass:"notranslate"},[this._v(" CageFS ")]),this._v(" . This is needed so that user's cronjobs and other things that user "),e("span",{staticClass:"notranslate"},[e("em",[this._v("dev/log")])]),this._v(" would get recorded in the system log files.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This is controlled using file "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/rsyslog.d/schroot.conf")])]),this._v(" with the following content:\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$AddUnixListenSocket /usr/share/cagefs-skeleton/dev/log\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To remove presence of "),e("span",{staticClass:"notranslate"},[e("em",[this._v("dev/log")])]),this._v(" inside CageFS, remove that file, and restart rsyslog service.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"excluding-mount-points"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#excluding-mount-points","aria-hidden":"true"}},[this._v("#")]),this._v(" Excluding mount points")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("How to exclude mounts from namespaces for all LVEs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By default, all mounts from the real file system is inherited by namespaces of all "),e("span",{staticClass:"notranslate"},[this._v(" LVEs ")]),this._v(" . So, destroying all "),e("span",{staticClass:"notranslate"},[this._v(" LVEs ")]),this._v(" may be required in order to unmount some mount in real file system completely. Otherwise, mount point remains busy after unmounting it in the real file system because this mount exists in namespaces of "),e("span",{staticClass:"notranslate"},[this._v(" LVEs ")]),this._v(" .")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("span",{staticClass:"notranslate"},[s("code",[t._v("lvectl start")])]),t._v(" command saves all mounts from real file system as “default namespace” for later use in all "),s("span",{staticClass:"notranslate"},[t._v(" LVEs ")]),t._v(" . "),s("span",{staticClass:"notranslate"},[s("strong",[t._v("lve_namespaces")])]),t._v(" service executes "),s("span",{staticClass:"notranslate"},[s("code",[t._v("lvectl start")])]),t._v(" command during startup.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("In "),s("span",{staticClass:"notranslate"},[s("strong",[t._v("lve-utils-2.0-26")])]),t._v(" (and later) there is an ability to exclude specific mounts from namespaces for all "),s("span",{staticClass:"notranslate"},[t._v(" LVEs ")]),t._v(" .\nIn order to do so, please create a file "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/container/exclude_mounts.conf")])]),t._v(" with list of mounts to exclude (one mount per line) as regular expressions, and then execute "),s("span",{staticClass:"notranslate"},[s("code",[t._v("lvectl start")])]),t._v(" :\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# cat /etc/container/exclude_mounts.conf    \n^/dir1/\n^/dir2$\n# lvectl start\n")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("After that, all new created "),s("span",{staticClass:"notranslate"},[t._v(" LVEs ")]),t._v(" will be without "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/dir2")])]),t._v(" mount and without mounts that start with "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/dir1/")])]),t._v(" (like "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/dir1/x")]),t._v(" ,  "),s("em",[t._v("/dir1/x/y")])]),t._v(" , etc). To apply changes to existing "),s("span",{staticClass:"notranslate"},[t._v(" LVEs ")]),t._v(" you should recreate "),s("span",{staticClass:"notranslate"},[t._v(" LVEs ")]),t._v(" :\n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"notranslate"},[e("p"),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# lvectl destroy all   \n# lvectl apply all\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),e("p",[this._v("You should recreate all LVEs only once after creating "),e("span",{staticClass:"notranslate"},[e("em",[this._v("/etc/container/exclude_mounts.conf")])]),this._v(" file. After that the configuration changes will be applied to all new LVEs automatically.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"control-panel-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#control-panel-integration","aria-hidden":"true"}},[this._v("#")]),this._v(" Control Panel Integration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("Initialize CageFS;")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("See and modify the list of enabled/disabled users;")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("Update CageFS skeleton.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"cpanel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpanel","aria-hidden":"true"}},[this._v("#")]),this._v(" cPanel")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("CageFS plugin for cPanel is located in "),e("span",{staticClass:"notranslate"},[this._v(" Plugins ")]),this._v(" section of WHM.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/_img1_zoom73.png",alt:""}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("To enable CageFS for a proper user (users), in "),s("span",{staticClass:"notranslate"},[t._v(" CageFS User Manager ")]),t._v(" choose a user from the list on the right ( "),s("span",{staticClass:"notranslate"},[t._v(" Disabled ")]),t._v(" users) and click "),s("span",{staticClass:"notranslate"},[t._v(" Toggle ")]),t._v(" . The user will move to the list on the left ( "),s("span",{staticClass:"notranslate"},[t._v(" Enabled ")]),t._v(" users).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To disable a user (users), choose a user from the list on the left ( "),e("span",{staticClass:"notranslate"},[this._v(" Enabled ")]),this._v(" users) and click "),e("span",{staticClass:"notranslate"},[this._v(" Disable CageFS ")]),this._v(" . The user will move to the list on the right ( "),e("span",{staticClass:"notranslate"},[this._v(" Disabled ")]),this._v(" users).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To update CageFS skeleton, click "),e("span",{staticClass:"notranslate"},[this._v(" Update CageFS Skeleton ")]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/_img2_zoom71.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"plesk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plesk","aria-hidden":"true"}},[this._v("#")]),this._v(" Plesk")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/plesk_cagefs_icon.png",alt:""}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("To enable CageFS for a proper user (users), in "),s("span",{staticClass:"notranslate"},[t._v(" CageFS User Manager ")]),t._v(" choose a user from the list on the right ( "),s("span",{staticClass:"notranslate"},[t._v(" Disabled ")]),t._v(" users) and click "),s("span",{staticClass:"notranslate"},[t._v(" Toggle ")]),t._v(" . The user will move to the list on the left ( "),s("span",{staticClass:"notranslate"},[t._v(" Enabled ")]),t._v(" users).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To disable a user (users), choose a user from the list on the left ( "),e("span",{staticClass:"notranslate"},[this._v(" Enabled ")]),this._v(" users) and click "),e("span",{staticClass:"notranslate"},[this._v(" Disable CageFS ")]),this._v(" . The user will move to the list on the right ( "),e("span",{staticClass:"notranslate"},[this._v(" Disabled ")]),this._v(" users).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To update CageFS skeleton, click "),e("span",{staticClass:"notranslate"},[this._v(" Update CageFS Skeleton ")]),this._v(" .")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/plesk_cagefs_manager_disable_all.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"ispmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ispmanager","aria-hidden":"true"}},[this._v("#")]),this._v(" ISPManager")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("CageFS comes with plugin for "),s("span",{staticClass:"notranslate"},[t._v(" ISP Manager ")]),t._v(" to enable/disable CageFS on per user base. In edit user section chose "),s("span",{staticClass:"notranslate"},[t._v(" Permission ")]),t._v(" tab. Mark "),s("span",{staticClass:"notranslate"},[t._v(" CageFS User Mode ")]),t._v(" checkbox and click "),s("span",{staticClass:"notranslate"},[t._v(" OK ")]),t._v(" to apply.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/ispmanager_cagefs_user_zoom98.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Or you can manage global CageFS settings via CageFS menu\n"),e("img",{attrs:{src:"/images/_img3.jpg",alt:""}})])}],!1,null,null,null);e.default=n.exports}}]);